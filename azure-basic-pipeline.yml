# trigger:
#   - main

# pool:
#   name: 'default'

# steps:
#   - checkout: self

#   - script: echo $(Agent.OS)  # For Defining the OS pipeline is running
#     displayName: "Debug Agent OS"

#   - script: echo "Hello, Azure Pipelines"
#     displayName: "Hello Message"

#   - script: ls -l
#     displayName: "Listing Files from Linux"
#     condition: eq(variables['Agent.OS'], 'Linux')  # Listing files based on OS (linux)

#   - script: dir
#     displayName: "Listing Files from Windows"
#     condition: eq(variables['Agent.OS'], 'Windows_NT')  # Listing files based on OS (Windows)

#   - script: |



trigger:
- main

pool:
  name: 'Default'

steps:
- script: echo "Hello Azure Pipelines User"
  displayName: "Hello Stage"

- script: |
    if [ -d "jenkins-pipeline/.git"]; then 
      echo "Git Repository already exists. Skipping Clone."
      ls -a jenkins-pipeline
    else 
      echo "git repository does not exists. Cloning Repository"
      git clone https://github.com/shahidafrid366/jenkins-pipeline.git
      ls -a jenkins-pipeline
    fi
  displayName: "Checkout Code Conditionally."

- script: |
    echo "Cleaning workspace and re-checking out repository..."
    rm -rf *
    git clone https://github.com/shahidafrid366/jenkins-pipeline.git
    ls -a 
    ls -lart
  displayName: "Clean Workspace and Checking out Fresh"